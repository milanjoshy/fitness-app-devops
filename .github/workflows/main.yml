name: Fitness App CI/CD Pipeline

# This workflow runs on any push to the main branch
on:
  push:
    branches: [ main ]

# Environment variables available to all jobs
env:
  ACR_NAME: devopsfitnessregistry
  RESOURCE_GROUP: MyResourceGroup
  CLUSTER_NAME: fitness-app-aks-cluster
  IMAGE_NAME: fitness-app

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      run: az acr login --name ${{ env.ACR_NAME }}

    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    needs: build # This job runs only after the 'build' job succeeds
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS Credentials
      run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }}

    - name: Update Kubernetes manifest with new image tag
      run: sed -i 's|:v1|:${{ github.sha }}|' deployment.yaml

    - name: Deploy to Kubernetes
      run: kubectl apply -f deployment.yaml
name: Fitness App CI/CD Pipeline

# This workflow runs on any push to the main branch
on:
  push:
    branches: [ main ]

# Environment variables available to all jobs
env:
  ACR_NAME: devopsfitnessregistry
  RESOURCE_GROUP: MyResourceGroup
  CLUSTER_NAME: fitness-app-aks-cluster
  IMAGE_NAME: fitness-app

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      run: az acr login --name ${{ env.ACR_NAME }}

    - name: Build and Push Docker Image
      run: |
        docker build . -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to AKS with Ansible
    runs-on: ubuntu-latest
    needs: build # This job runs only after the 'build' job succeeds
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Get AKS Admin Credentials
      # We use --admin to get credentials that will bypass any 403 Forbidden errors
      run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --admin

    - name: Update Kubernetes manifest with new image tag
      # This step is crucial! It replaces the ":v1" tag in your deployment file
      # with the new, unique tag from the 'build' job.
      run: sed -i 's|:v1|:${{ github.sha }}|' deployment.yaml

    - name: Install Ansible and Kubernetes Python Library
      # The GitHub runner needs Ansible and the Python library to work
      run: |
        sudo apt-get update
        sudo apt-get install ansible -y
        pip3 install kubernetes

    - name: Run Ansible Playbook
      # This is the step you wanted! It runs your playbook.yml file,
      # which reads the modified deployment.yaml and applies it to your cluster.
      run: ansible-playbook playbook.yml
